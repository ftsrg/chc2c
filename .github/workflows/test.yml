name: Run CHC Benchmarks

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install Z3
        run: |
          sudo apt-get update
          sudo apt-get install -y z3
          sudo pip install -r requirements.txt
      
      # Step 1: Download chc-comp24-benchmarks
      - name: Download and unzip CHC benchmarks
        run: |
          curl -L -o chc-comp-benchmarks.zip https://github.com/chc-comp/chc-comp24-benchmarks/archive/refs/heads/main.zip
          unzip chc-comp-benchmarks.zip
          mv chc-comp24-benchmarks-main chc-benchmarks

      # Step 2: Download Theta
      - name: Download and unzip Theta
        run: |
          curl -L -o Theta.zip https://github.com/ftsrg/theta/releases/download/v6.11.6/Theta.zip
          unzip Theta.zip
          mv Theta theta
          sudo apt-get install -y openjdk-17-jre-headless libmpfr6 libgomp1

      - name: Download Symbiotic
        run: |
          curl -L -o symbiotic.zip https://zenodo.org/record/14230101/files/symbiotic.zip
          unzip symbiotic.zip
          echo "CHECK( init(main()), LTL(G ! call(reach_error())) )" > unreach-call.prp      
          sudo apt-get update
          sudo apt-get install -y python3 python3-lxml python3-clang
      
      # Step 3: Run Z3, chc2c, and Theta for each file
      - name: Process selected files
        run: |
          echo "| task name | z3 output | theta output | symbiotic output |" > results.md
          echo "| --------- | --------- | ------------ | ---------------- |" >> results.md
          
          for folder in chc-benchmarks/LIA-Lin chc-benchmarks/LIA
          do
            sat=0
            unsat=0
          
            find "$folder" -name "*.smt2" | shuf --random-source <(yes 42) > selected_files.txt
          
            while IFS= read -r inputfile; do
              if (( unsat + sat > 11 )); then
                echo "We have enough problems, break"
                break
              fi
              task_name=$(basename "$inputfile")
              echo "$task_name"
          
              # Run Z3 with a timeout of 1 minute, capture multiline output
              echo "Running z3: "
              z3_output=$(timeout 60 z3 "$inputfile" 2>&1 || echo "timeout")
              echo "z3 result: $z3_output"
              if echo "$z3_output" | grep -q "^sat$"; then
                z3_result="sat"
                if (( sat > 5 )); then
                  echo "We have enough sat problems, continue.."
                  continue
                fi
                sat=$((sat+1))
              elif echo "$z3_output" | grep -q "^unsat$"; then
                z3_result="unsat"
                if (( unsat > 5 )); then
                  echo "We have enough unsat problems, continue.."
                  continue
                fi
                unsat=$((unsat+1))
              else
                continue  # Skip if result is unknown or not sat/unsat
              fi
          
              # Convert .smt2 file to .c using chc2c.py (with 1-minute timeout)
              echo "Converting CHC2C: "
              c_file="${inputfile%.smt2}.c"
              chc2c_output=$(timeout 60 python3 chc2c.py "$inputfile" -o "$c_file" 2>&1 || echo "timeout")
              if [[ $? -ne 0 ]]; then
                echo "chc2c timed out"
                continue  # Skip if conversion failed or timed out
              fi
          
              # Run Theta on the .c file (with 3-minute timeout), capture multiline output
              echo "Running theta: "
              theta_output=$(timeout 180 ./theta/theta-start.sh "$c_file" --property unreach-call.prp --svcomp --backend CEGAR --domain PRED_CART --refinement BW_BIN_ITP --loglevel RESULT 2>&1 || echo "timeout")
              echo "theta result: $theta_output"
              if echo "$theta_output" | grep -q "SafetyResult Unsafe"; then
                theta_result="unsafe"
              elif echo "$theta_output" | grep -q "SafetyResult Safe"; then
                theta_result="safe"
              else
                theta_result="unknown"
              fi
          
              # Run Symbiotic on the .c file (with 3-minute timeout), capture multiline output
              echo "Running symbiotic: "
              symbiotic_output=$(timeout 180 ./symbiotic/bin/symbiotic --prp=unreach-call.prp "$c_file" 2>&1 || echo "timeout")
              echo "symbiotic result: $symbiotic_output"
              if echo "$symbiotic_output" | grep -q "RESULT: true"; then
                symbiotic_result="unsafe"
              elif echo "$symbiotic_output" | grep -q "RESULT: false"; then
                symbiotic_result="safe"
              else
                symbiotic_result="unknown"
              fi
          
              # Add results to markdown table
              echo "| $task_name | $z3_result | $theta_result | $symbiotic_result |" >> results.md
            done < selected_files.txt
          done

      # Step 5: Print the results table
      - name: Output the results table
        run: cat results.md

      # Step 6: Comment on the pull request with the results (only on PR)
      - name: Comment on PR with results
        if: github.event_name == 'pull_request'
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          path: results.md